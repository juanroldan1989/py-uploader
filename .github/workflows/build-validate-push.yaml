name: Build, Validate and Push Docker Image

on:
  workflow_call:
    inputs:
      image-name:
        description: "The name of the Docker image"
        required: true
        type: string
      working-directory:
        description: "The directory where Dockerfile is located"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  build-and-push:
    name: "Build/Validate/Push Image"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set ECR repository URI based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "REPOSITORY_URI=<account-id>.dkr.ecr.<region-id>.amazonaws.com/${{ inputs.image-name }}-dev" >> $GITHUB_ENV
          else
            echo "REPOSITORY_URI=<account-id>.dkr.ecr.<region-id>.amazonaws.com/${{ inputs.image-name }}-prod" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check if ECR Registry exists, create if not
        run: |
          REPOSITORY_NAME=${{ inputs.image-name }}
          AWS_REGION="${{ env.AWS_REGION }}"

          # Check if the repository exists
          if aws ecr describe-repositories --repository-names "$REPOSITORY_NAME" --region "$AWS_REGION" > /dev/null 2>&1; then
            echo "ECR repository '$REPOSITORY_NAME' already exists."
          else
            echo "ECR repository '$REPOSITORY_NAME' does not exist. Creating..."
            aws ecr create-repository --repository-name "$REPOSITORY_NAME" --region "$AWS_REGION"
            echo "ECR repository '$REPOSITORY_NAME' created."
          fi

      - name: "Login, Build and Tag Docker image"
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          docker build -t ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}
          format: "table"
          severity: "CRITICAL,HIGH"
          exit-code: 1

      - name: Check Docker best practices with Dockle
        uses: erzz/dockle-action@v1
        with:
          image: ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}
          failure-threshold: fatal
          exit-code: 1

      - name: Push to ECR
        if: success()
        run: docker push ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Notify Slack on success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: "#36A64F"
          SLACK_TITLE: "Security Scan Completed"
          SLACK_MESSAGE: |
            Security scans completed successfully.
            All checks passed.
            Image: ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}"

      - name: Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: "danger"
          SLACK_TITLE: "Build or Security Scan Failed"
          SLACK_MESSAGE: |
            A critical error occurred in the build or security scan process.
            Please check GitHub Actions logs for more details.
            Image: ${{ env.REPOSITORY_URI }}:${{ env.IMAGE_TAG }}"
