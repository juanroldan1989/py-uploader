version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 3s
      retries: 5
      start_period: 30s

  flask:
    build:
      context: .
      dockerfile: flask/Dockerfile
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    networks:
      - backnet
      - frontnet
    environment:
      FLASK_SECRET: "flask_secret key"
      FLASK_ENV: development

      AWS_ACCESS_KEY: "aws_access_key"
      AWS_SECRET_KEY: "aws_secret_key"
      S3_BUCKET_NAME: "s3_bucket_name"

      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_HOST: "db"
      POSTGRES_DB: "mydb"

    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    ports:
      - "8000:80"
    networks:
      - frontnet
    depends_on:
      - flask

networks:
  backnet:
  frontnet:

volumes:
  postgres_data:
